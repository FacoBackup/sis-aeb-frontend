{"version":3,"file":"index.js","sources":["../src/components/DateField.js","../src/components/TextField.js","../src/components/ImageField.js","../src/components/Button.js","../src/components/DropDownField.js","../src/components/SelectorsPT.js","../src/components/Selector.js"],"sourcesContent":["import './Input.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default function DateField(props) {\n\n  return (\n    <div style={{\n      width: props.width,\n      height: '100px',\n      display: 'grid',\n      alignItems: props.value ? 'unset' : 'flex-start',\n      gap: '4px',\n    }}>\n      <label htmlFor={'input-' + props.label + '-date'} className={'.labelContainer'}>{props.label}</label>\n\n      <div className={'fieldsContainer'}>\n        <input\n          disabled={props.disabled}\n          id={'input-' + props.label + '-date'}\n          style={{\n            height: '56px',\n            fontWeight: 500,\n            fontSize: '1rem',\n            fontFamily: '\\'Source Sans Pro\\', sans-serif',\n            cursor: props.disabled ? 'initial' : 'text'\n          }}\n          className={'inputContainer'}\n          value={props.value}\n          type={'date'}\n          onChange={props.handleChange}\n          maxLength={props.maxLength}\n        />\n      </div>\n\n\n      <label htmlFor={'input-' + props.label + '-date'} className={'.alertLabel'}\n             style={{\n               color: (props.value === null || !props.value) ? '#ff5555' : '#262626',\n               visibility: props.required ? 'visible' : 'hidden'\n             }}>{'Este campo é obrigatório.'}</label>\n\n    </div>\n  )\n}\n\nDateField.propTypes = {\n  width: PropTypes.string,\n  label: PropTypes.string,\n  handleChange: PropTypes.func,\n  value: PropTypes.number,\n  required: PropTypes.bool,\n  locale: PropTypes.string,\n  disabled: PropTypes.bool,\n  dark: PropTypes.bool\n}\n","import './Input.css'\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport InputMask from 'react-input-mask'\nimport { VisibilityOffRounded, VisibilityRounded } from '@material-ui/icons'\n\nexport default function TextField(props) {\n    const [visible, setVisible] = useState(false)\n\n    function getLang(locale) {\n        let response = 'This field is required.'\n\n        if (locale === 'pt')\n            response = 'Este campo é obrigatório.'\n\n        return response\n    }\n\n    return (\n        <div\n            style={{\n                width: props.width,\n                height: props.variant === 'small' ? '86px' : '100px',\n                display: 'grid',\n                alignItems: props.value ? 'unset' : 'flex-start',\n                gap: '4px',\n            }}\n        >\n            <label htmlFor={props.label + 'text_field'} className={'.labelContainer'}\n                   style={{\n                       visibility: (props.value !== undefined && props.value !== null && props.value.length > 0) || props.type === 'time' ? 'visible' : 'hidden',\n                       opacity: (props.value !== undefined && props.value !== null && props.value.length > 0) || props.type === 'time' ? '1' : '0',\n                       transition: 'visibility 0.2s ease,opacity 0.2s ease'\n                   }}>{props.label}</label>\n\n            {props.phoneMask ?\n                <InputMask mask={'(99) 9999-9999'}\n                           value={props.value}\n                           onChange={props.handleChange}>\n                    {event =>\n                        <input\n                            disabled={props.disabled}\n                            id={props.label + 'text_field'}\n                            placeholder={props.placeholder}\n                            style={{\n                              height: props.variant === 'small' ? '40px' : '56px',\n                              borderRadius: '5px',\n                              border: '#ecedf2 1px solid',\n                              boxShadow: 'unset',\n                              transition:' 250ms ease-in-out',\n                              background: '#f4f5fa',\n                              width: '100%',\n                              outline: 'none',\n                              padding: '5px',\n                              fontSize: '1rem',\n                              color:' #555555'\n                            }}\n                            value={event.value}\n                            onChange={event.onChange}\n                            maxLength={props.maxLength}\n                        />}\n                </InputMask>\n                :\n                <div className={'.fieldsContainer'}>\n                    <input\n                        disabled={props.disabled}\n                        id={props.label + 'text_field'}\n\n                        placeholder={props.placeholder}\n\n                        value={props.value}\n                        style={{\n                          height: props.variant === 'small' ? '40px' : '56px',\n                          borderRadius: '5px',\n                          border: '#ecedf2 1px solid',\n                          boxShadow: 'unset',\n                          transition:' 250ms ease-in-out',\n                          background: '#f4f5fa',\n                          width: '100%',\n                          outline: 'none',\n                          padding: '5px',\n                          fontSize: '1rem',\n                          color:' #555555'\n                        }}\n                        type={props.passwordMask && !visible ? 'password' : props.type ? props.type : 'text'}\n                        onChange={props.handleChange}\n                        maxLength={props.maxLength}\n                    />\n                    {props.passwordMask ?\n                        !visible ? <VisibilityOffRounded htmlFor={props.label + 'text_field'}\n                                                         style={{transition: '300ms ease-in-out'}}\n                                                         onClick={() => setVisible(true)}\n                                                         className={'.visibilityContainer'}/> :\n                            <VisibilityRounded htmlFor={props.label + 'text_field'}\n                                               style={{transition: '300ms ease-in-out'}}\n                                               className={'.visibilityContainer'}\n                                               onClick={() => setVisible(false)}/>\n                        :\n                        null\n                    }\n                </div>\n            }\n\n\n            <label htmlFor={props.label + 'text_field'} className={'.alertLabel'}\n                   style={{\n                       color: (props.value === null || !props.value || props.value.length === 0) ? '#ff5555' : '#262626',\n                       visibility: props.required ? 'visible' : 'hidden'\n                   }}>{getLang(props.locale)}</label>\n\n        </div>\n    )\n}\n\nTextField.propTypes= {\n    width: PropTypes.string,\n    placeholder: PropTypes.string,\n    label: PropTypes.string,\n    handleChange: PropTypes.func,\n    value: PropTypes.string,\n    required: PropTypes.bool,\n    locale: PropTypes.string,\n    passwordMask: PropTypes.bool,\n    phoneMask: PropTypes.bool,\n    maxLength: PropTypes.number,\n    disabled: PropTypes.bool,\n    variant: PropTypes.oneOf([\n        'default',\n        'small'\n    ]),\n    type: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Input.css'\nimport { CloseRounded, CloudUploadRounded } from '@material-ui/icons'\n\nexport default function ImageField(props) {\n\n    function getLang(locale) {\n        let response = 'This field is required.'\n\n        if (locale === 'pt')\n            response = 'Este campo é obrigatório.'\n\n        return response\n    }\n\n    return (\n        <div style={{\n            width: props.width,\n            marginBottom: 'auto',\n            height: '100px',\n            display: \"grid\",\n            gap: '4px',\n            alignItems: props.initialImage ? 'unset' : 'flex-end'\n        }}>\n\n            <label htmlFor={'upload-image'} className={'.labelContainer'}\n                   style={{\n                       visibility: props.initialImage && props.initialImage.name ? 'visible' : 'hidden',\n                       opacity: props.initialImage ? '1' : '0',\n                       transition: 'visibility 0.2s ease,opacity 0.2s ease'\n                   }}>{props.label}</label>\n\n            <form className={'.imageFieldContainer, .highlight'}>\n                {props.initialImage && props.initialImage.name ?\n                    <p\n                        className={'.labelContainer'}\n                        style={{\n                            color: '#262626',\n                            margin: 'unset',\n                            overflowX: 'hidden',\n                            width: '75%',\n                            wordBreak: 'keep-all',\n                            whiteSpace: 'nowrap'\n                        }}\n                    >{props.initialImage.name}</p> :\n                    <p\n                        className={'.labelContainer'}\n                        style={{color: '#555555', margin: 'unset'}}\n                    > {props.label}</p>}\n\n                {props.initialImage ?\n\n                    <div className={'.uploadFormContainer'} style={{cursor: 'pointer'}} onClick={() => {\n                        props.setImage(null)\n                        props.setChanged(true)\n                    }}>\n                        <CloseRounded/>\n                    </div>\n                    :\n                    <label htmlFor='upload-image'\n                           className={'.uploadFormContainer'}\n                           onChange={event => {\n                               props.setImage(event)\n                               props.setChanged(true)\n                           }}><CloudUploadRounded/></label>\n\n                }\n                <input id=\"upload-image\" type=\"file\" style={{display: 'none'}}\n                        disabled={props.disabled}\n                       onChange={event => {\n                           props.setImage(event)\n                           props.setChanged(true)\n                       }}/>\n\n            </form>\n\n            <label htmlFor={'input'} className={'.alertLabel'}\n                   style={{\n                       color: (props.value === null || !props.value || props.value.length === 0) ? '#ff5555' : '#262626',\n                       visibility: props.required ? 'visible' : 'hidden'\n                   }}>{getLang(props.locale)}</label>\n\n        </div>\n    )\n}\n\nImageField.propTypes = {\n    setImage: PropTypes.func,\n    initialImage: PropTypes.any,\n    size: PropTypes.string,\n    label: PropTypes.string,\n    base64: PropTypes.bool,\n    setChanged: PropTypes.func,\n    width: PropTypes.string,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n}\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nexport default function Button(props) {\n    const [focused, setFocused] = useState(false)\n    const [hovered, setHovered] = useState(false)\n\n    function getBorder() {\n        let response = '5px'\n        switch (props.variant) {\n            case 'rounded': {\n                response = '32px'\n                break\n            }\n            case'circular': {\n                response = '50%'\n                break\n            }\n            case 'custom': {\n                response = props.borderRadius\n                break\n            }\n            default:\n                break\n        }\n        return response\n    }\n\n    return (\n        <button\n            onMouseDown={() => setFocused(true)}\n            onMouseUp={() => setFocused(false)}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => {\n                setFocused(false)\n                setHovered(false)\n            }}\n            key={props.buttonKey}\n            style={{\n                width: props.width,\n                backgroundColor: props.backgroundColor && !props.disabled ? props.backgroundColor : props.disabled ? 'rgba(0,0,0,0.1)' : 'unset',\n                color: !props.disabled ? (props.hoverHighlight && hovered ? props.colorVariant === 'secondary' ? '#ff4940' : '#0095ff' : props.fontColor) : '#555555',\n                borderRadius: getBorder(),\n                boxShadow: props.boxShadow,\n                padding: props.padding ? props.padding : '8px',\n                height: 'auto',\n                fontFamily: '\\'Roboto\\' !important',\n                outline: 'none',\n                border: props.border,\n                // fontSize: '.9rem',\n                transition: '200ms ease-in-out',\n                cursor: props.disabled ? 'initial' : 'pointer',\n                display: 'flex',\n                justifyContent: props.justification ? props.justification : 'center'\n            }} disabled={props.disabled}\n            onClick={() => {\n                if (props.handleClick !== undefined)\n                    props.handleClick()\n            }}\n        >\n            {props.content}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    handleClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    content: PropTypes.any,\n    backgroundColor: PropTypes.any,\n    fontColor: PropTypes.any,\n    padding: PropTypes.string,\n    variant: PropTypes.oneOf([\n        'rounded',\n        'default',\n        'circle',\n        'custom'\n    ]),\n    border: PropTypes.string,\n    boxShadow: PropTypes.any,\n    width: PropTypes.string,\n    hoverHighlight: PropTypes.bool,\n    justification: PropTypes.string,\n    colorVariant: PropTypes.oneOf([\n        'default',\n        'secondary'\n    ]),\n    borderRadius: PropTypes.any,\n    buttonKey: PropTypes.any\n}\n","import styles from './Input.css'\nimport PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { ArrowDropDownRounded } from '@material-ui/icons'\nimport Button from './Button'\n\nexport default function DropDownField(props) {\n    const [open, setOpen] = useState(false)\n    const [value, setValue] = useState(undefined)\n\n    function getLang(locale) {\n        let response = 'This field is required.'\n\n        if (locale === 'pt')\n            response = 'Este campo é obrigatório.'\n\n        return response\n    }\n\n    useEffect(() => {\n        const filtered = props.choices.filter(element => {\n            if (element.key === props.value)\n                return element\n        })\n        if (filtered.length > 0)\n            setValue(filtered[0].value)\n    }, [props.value])\n    return (\n        <div\n            style={{\n                width: props.width,\n                height: '100px',\n                display: 'grid',\n                alignItems: props.value ? 'unset' : 'flex-start',\n                gap: '4px',\n            }}\n        >\n            <label htmlFor={'dropdown-'+props.label} className={styles.labelContainer}\n                   style={{\n                       visibility: (props.value !== undefined && props.value !== null) ? 'visible' : 'hidden',\n                       opacity: (props.value !== undefined && props.value !== null) ? '1' : '0',\n                       transition: 'visibility 0.2s ease,opacity 0.2s ease'\n                   }}>{props.label}</label>\n\n            <div className={styles.dropDownContainer} onBlur={event => {\n                if(!event.currentTarget.contains(event.relatedTarget))\n                    setOpen(false)\n            }} >\n                <button\n                    id={'dropdown-'+props.label}\n                    disabled={props.disabled}\n\n                    style={{\n                        height: '56px', borderRadius: '5px',\n                    }}\n                    className={styles.selectContainer}\n                    onClick={() => setOpen(!open)}\n                >\n\n                    {value ? value : props.placeholder}\n                    <ArrowDropDownRounded style={{transform: open ? 'unset' : 'rotate(180deg)'}}/>\n                </button>\n                <div className={styles.dropDownChoicesContainer} style={{display: open ? 'initial' : 'none'}}>\n                    {open ? props.choices.map((choice, index) => (\n                        <Button key={index + '-choice-button'} width={'100%'} paddingType={\"default\"}\n                                justification={'flex-start'}\n                                handleClick={() => {\n                                    props.handleChange(choice.key)\n                                    setOpen(false)\n                                }} content={choice.value}\n\n                                backgroundColor={choice.key === props.value ? '#0095ff' : 'transparent'}\n                                fontColor={choice.key === props.value ? 'white' : '#262626'}\n                                border={'transparent 1px solid'} elevation={false} hoverHighlight={choice.key !== props.value}/>\n                    )) : null}\n                </div>\n            </div>\n\n            <label htmlFor={'dropdown-'+props.label} className={styles.alertLabel}\n                   style={{\n                       color: props.value === null || props.value === undefined ? '#ff5555' : '#262626',\n                       visibility: props.required && !open ? 'visible' : 'hidden',\n                   }}>{getLang(props.locale)}</label>\n\n        </div>\n    )\n}\n\nDropDownField.propTypes = {\n    width: PropTypes.string,\n    placeholder: PropTypes.string,\n    label: PropTypes.string,\n    choices: PropTypes.array,\n    handleChange: PropTypes.func,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    locale: PropTypes.string,\n    disabled: PropTypes.bool,\n    dark: PropTypes.bool\n}\n","export default {\n    close: 'Fechar',\n    search: 'Pesquisar',\n    required: 'Este campo é obrigatório.'\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { AddRounded, DeleteForeverRounded, ListRounded } from '@material-ui/icons'\nimport { Modal } from '@material-ui/core'\nimport './Input.css'\n\nimport Button from './Button'\nimport TextField from './TextField'\nimport SelectorsPT from './SelectorsPT'\n\nexport default function Selector(props) {\n    const [modal, setModal] = useState(false)\n    const [search, setSearch] = useState('')\n    const lang = SelectorsPT\n\n    function handleChange(event) {\n        setSearch(event.value)\n    }\n\n    function renderModal() {\n        return (\n            <Modal open={modal} onClose={() => setModal(false)}\n                   style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                <div className={'.modalContainer'}\n                     style={{height: 'clamp(500px, 75%, 1000px', alignContent: 'flex-start'}}>\n                    <div className={'.modalContent'}>\n                        <h3 style={{marginTop: 0, marginBottom: '16px'}}>{props.label}</h3>\n                        {props.selected !== undefined && props.selected !== null && props.selected.key !== null && props.selected.key !== undefined ?\n                            <Button\n                                content={props.required ?\n                                    <div>\n                                        <h5 style={{marginTop: 0, marginBottom: 0}}>{props.selected.value}</h5>\n                                    </div>\n                                    :\n                                    <div style={{display: 'flex', gap: '32px', alignItems: 'center'}}>\n                                        <h5 style={{marginTop: 0, marginBottom: 0}}>{props.selected.value}</h5>\n                                        <DeleteForeverRounded/>\n                                    </div>}\n                                hoverHighlight={true}\n                                colorVariant={'secondary'}\n                                variant={'default'}\n                                border={'unset'}\n                                width={'fit-content'}\n                                backgroundColor={'#f4f5fa'}\n                                handleClick={() => {\n                                    if (props.setChanged)\n                                        props.setChanged(true)\n                                    props.handleChange(undefined)\n                                }}\n                                padding={props.required ? '8px 32px 8px 32px' : '8px'}\n                                disabled={props.required}\n                                fontColor={'#555555'}/>\n                            : null}\n\n\n                        <TextField\n                            variant={'small'}\n                            placeholder={lang.search} label={lang.search}\n                            handleChange={event => {\n                                setSearch(event.target.value)\n                            }}\n                            locale={props.locale} value={search} required={false}\n                            width={'100%'}\n                            maxLength={undefined}/>\n\n                        <div style={{display: 'grid', gap: '8px'}}>\n                            {props.data.map((data) => (\n                                (search.length === 0 || search.length > 0 && (data.value.toLowerCase()).match(search.toLowerCase())) ?\n                                    <div key={data.key + '-' + data.value}>\n                                        <button onClick={() => {\n                                            if (props.selected?.key === data.key)\n                                                props.handleChange(undefined)\n\n                                            else {\n                                                if (props.setChanged)\n                                                    props.setChanged(true)\n                                                props.handleChange(data)\n                                                setModal(false)\n                                            }\n                                        }} className={'.rowContainer'}\n                                                style={{\n                                                    backgroundColor: data.key === props.selected?.key ? '#0095ff' : undefined,\n                                                    color: data.key === props.selected?.key ? 'white' : undefined,\n                                                    outline: 'none'\n                                                }}>\n                                            {data.value}\n                                        </button>\n                                    </div>\n                                    :\n                                    null\n                            ))}\n                        </div>\n                    </div>\n                    <div className={'.modalFooter'}>\n                        <Button\n                            width={'fit-content'}\n                            border={'#ecedf2 .7px solid'}\n                            variant={'rounded'}\n                            content={lang.close}\n                            handleClick={() => setModal(false)}\n                            backgroundColor={'white'}\n                            hoverHighlight={true}\n                            colorVariant={'secondary'}\n                            elevation={true}\n                            fontColor={'#262626'}\n                            padding={'8px 32px 8px 32px'}\n                        />\n                    </div>\n                </div>\n            </Modal>\n        )\n    }\n\n\n    return (\n        <>\n            {renderModal()}\n\n            <div\n                key={props.label + '-selector'}\n                style={{\n                    width: props.width,\n                    height: '100px',\n                    display: 'grid',\n                    alignItems: props.value ? 'unset' : 'flex-start',\n                    gap: '4px',\n                }}\n            >\n                <label htmlFor={'select-' + props.label} className={'.labelContainer'}\n                       style={{\n                           visibility: props.selected !== undefined && props.selected !== null && props.selected.key !== null && props.selected.key !== undefined ? 'visible' : 'hidden',\n                           opacity: props.selected !== undefined && props.selected !== null && props.selected.key !== null && props.selected.key !== undefined ? '1' : '0',\n                           transition: 'visibility 0.2s ease,opacity 0.2s ease'\n                       }}>{props.label}</label>\n\n                <div className={'.dropDownContainer'}>\n                    <button\n                        id={'select-' + props.label}\n                        disabled={props.disabled}\n\n                        style={{\n                            height: '56px', borderRadius: '5px',\n                            cursor: props.disabled ? 'unset' : 'pointer'\n                        }}\n                        className={'.selectContainer'}\n                        onClick={() => setModal(true)}\n                    >\n\n                        {props.selected !== undefined && props.selected !== null && props.selected.key !== null && props.selected.key !== undefined ?\n                            <>\n\n                                {props.selected.value}\n                                <ListRounded style={{color: 'rgba(0,0,0,.6)'}}/>\n                            </>\n                            :\n                            <>\n                                <p style={{\n                                    color: 'rgba(0,0,0,.55)',\n                                }}>{props.label}</p>\n                                <AddRounded style={{\n                                    visibility: props.disabled ? 'hidden' : 'visible',\n                                    color: 'rgba(0,0,0,.6)'\n                                }}/>\n                            </>\n                        }\n                    </button>\n                </div>\n\n                <label htmlFor={'select-' + props.label} className={'.alertLabel'}\n                       style={{\n                           color: props.selected?.key === null || !props.selected?.key ? '#ff5555' : '#262626',\n                           visibility: props.required ? 'visible' : 'hidden',\n                       }}>{lang.required}</label>\n\n            </div>\n        </>\n    )\n}\n\nSelector.propTypes = {\n    data: PropTypes.array,\n    handleChange: PropTypes.func,\n    selected: PropTypes.any,\n    label: PropTypes.string,\n    width: PropTypes.string,\n    required: PropTypes.bool,\n    setChanged: PropTypes.func,\n    disabled: PropTypes.bool,\n    dark: PropTypes.bool,\n}\n"],"names":["DateField","props","React","style","width","height","display","alignItems","value","gap","htmlFor","label","className","disabled","id","fontWeight","fontSize","fontFamily","cursor","type","onChange","handleChange","maxLength","color","visibility","required","TextField","response","useState","visible","setVisible","variant","length","opacity","transition","phoneMask","InputMask","mask","event","placeholder","borderRadius","border","boxShadow","background","outline","padding","passwordMask","VisibilityRounded","onClick","VisibilityOffRounded","locale","ImageField","marginBottom","initialImage","name","margin","overflowX","wordBreak","whiteSpace","setImage","setChanged","CloseRounded","CloudUploadRounded","Button","setFocused","setHovered","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","key","buttonKey","backgroundColor","hoverHighlight","colorVariant","fontColor","getBorder","justifyContent","justification","undefined","handleClick","content","DropDownField","open","setOpen","setValue","useEffect","filtered","choices","filter","element","onBlur","currentTarget","contains","relatedTarget","ArrowDropDownRounded","transform","map","choice","index","paddingType","elevation","propTypes","PropTypes","string","func","number","bool","dark","oneOf","any","size","base64","array","close","search","Selector","modal","setModal","setSearch","lang","SelectorsPT","Modal","onClose","alignContent","marginTop","selected","DeleteForeverRounded","target","data","toLowerCase","match","_props$selected2","_props$selected3","ListRounded","AddRounded","_props$selected5"],"mappings":"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"}